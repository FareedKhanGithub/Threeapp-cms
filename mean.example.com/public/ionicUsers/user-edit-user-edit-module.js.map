{"version":3,"sources":["webpack:///./src/app/user-edit/user-edit.module.ts","webpack:///./src/app/user-edit/user-edit.page.html","webpack:///./src/app/user-edit/user-edit.page.scss","webpack:///./src/app/user-edit/user-edit.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEG;AAEhD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,4DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,orBAAorB,gBAAgB,4PAA4P,mBAAmB,6jB;;;;;;;;;;;ACAn9B,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArB;AAEe,CAAG,yFAAyF;AAClF,uEAAuE;AAEvF,CAAqB,4CAA4C;AAEpE,CAAkB,yBAAyB;AAgB3F;IAKE,sBACU,cAA8B,EAC9B,YAA0B,EAC1B,MAAc,EACd,aAA4B;QAH5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QANtC,WAAM,GAAQ,EAAE,CAAC;IAOb,CAAC;IAEL,uCAAgB,GAAhB;QAAA,iBASC;QAPC,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,IAAE,KAAK,EAAC;YAC1C,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAC,qBAAqB,CAAC;SAC5C;aAAI;YACH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAM;gBAC1C,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,+BAAQ,GAAR,UAAS,QAAQ;QAEf,IAAG,QAAQ,CAAC,OAAO,IAAE,KAAK,EAAC;YAEzB,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,sBAAsB,EAAE;gBACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,yBAAyB,CAAC;aAClD;YAED,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,iBAAiB,EAAE;gBACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,sDAAsD,CAAC;aAC/E;YAED,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;gBAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;aACzD;SAEF;QAED,IAAG,QAAQ,CAAC,OAAO,KAAG,IAAI,EAAC;YACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACpD;IACH,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACzC,UAAC,QAAQ;YACP,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,8BAAO,GAAP,UAAQ,EAAS;QAAjB,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAClC,UAAC,QAAY;YACX,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC5B,CAAC,CACF,CAAC;IACJ,CAAC;IA5DU,YAAY;QAbxB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,qGAAoC;;SAErC,CAAC;yCAe0B,8DAAc;YAChB,2DAAY;YAClB,sDAAM;YACC,gEAAa;OAT3B,YAAY,CA+DxB;IAAD,mBAAC;CAAA;AA/DwB","file":"user-edit-user-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserEditPage } from './user-edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserEditPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UserEditPage]\n})\nexport class UserEditPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Edit</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding >\\n\\n  <ion-item *ngIf=\\\"!user\\\">\\n    <ion-label text-center>\\n      <ion-spinner></ion-spinner>\\n    </ion-label>\\n  </ion-item>\\n\\n  <ion-list *ngIf=\\\"user\\\">\\n      <ion-input [(ngModel)]=\\\"user._id\\\" name=\\\"_id\\\" type=\\\"hidden\\\"></ion-input>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n        <div *ngIf=\\\"errors.email\\\"> {{ errors.email }} </div>\\n      </ion-item>\\n    \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Username</ion-label>\\n        <ion-input [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" type=\\\"text\\\"></ion-input>\\n        <div *ngIf=\\\"errors.username\\\"> {{ errors.username }} </div>\\n      </ion-item>\\n    \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">First Name</ion-label>\\n        <ion-input [(ngModel)]=\\\"user.first_name\\\" name=\\\"first_name\\\" type=\\\"text\\\"></ion-input>\\n      </ion-item>\\n    \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n        <ion-input [(ngModel)]=\\\"user.last_name\\\" name=\\\"last_name\\\" type=\\\"text\\\"></ion-input>\\n      </ion-item>\\n  </ion-list>\\n\\n  \\n    <ion-button color=\\\"primary\\\" expand=\\\"full\\\" (click)=\\\"onSubmit()\\\">Submit</ion-button>\\n  </ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZWRpdC91c2VyLWVkaXQucGFnZS5zY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';   //Contains the information about a route associated with a component loaded in an outlet.\n                                                                   //An ActivatedRoute can also be used to traverse the router state tree.\n\nimport { CookieService } from 'ngx-cookie-service';                     //cookie session was imported from a website\n\nimport { UsersService } from '../users.service';                  //both of these are files\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.page.html',\n  styleUrls: ['./user-edit.page.scss'],\n})\n\n\n\n\n\n\n\n\nexport class UserEditPage {\n\n  user:User;\n  errors: any = {};\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private usersService: UsersService,\n    private router: Router,\n    private cookieService: CookieService\n  ) { }\n\n  ionViewWillEnter() {\n\n    if(this.cookieService.check('sugar')==false){\n      window.location.href='/ionicUsers/#/login';\n    }else{\n      this.activatedRoute.params.subscribe((params)=>{\n        this.getUser(params['id']);\n      });\n    }\n  }\n\n  response(response): void{\n\n    if(response.success==false){\n\n      if( response.error.errors.name == 'MissingUsernameError' ){\n        this.errors.username = 'Please enter a username';\n      }\n\n      if( response.error.errors.name == 'UserExistsError' ){\n        this.errors.username = 'A user with the given username is already registered';\n      }\n\n      if( response.error.errors.email ){\n        this.errors.email = response.error.errors.email.message;\n      }\n\n    }\n\n    if(response.success===true){\n      this.router.navigate(['/user', response.user._id]);\n    }\n  }\n\n  onSubmit(): void{\n    this.usersService.edit(this.user).subscribe(\n      (response) => {\n        this.response(response);\n      }\n    );\n  }\n\n  getUser(id:string): void{\n    this.usersService.user(id).subscribe(\n      (response:any)=>{\n        this.user = response.user;\n      }\n    );\n  }\n\n\n}\n"],"sourceRoot":""}